<configuration scan="true" scanPeriod="10 seconds">

	<!-- 简单的文件输出 -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoder>
			<pattern>[ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96} [%line] - %msg%n
			</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily 配置日志所生成的目录以及生成文件名的规则 -->
			<fileNamePattern>D://logs/mylog-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>64 MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>

		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
		<!-- 安全日志文件从多个JVMs一样。降低性能！ -->
		<prudent>true</prudent>
	</appender>

	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>
				[ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96} [%line] - %msg%n
			</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>

	<!-- 使所有的日志文件和标准输出附加。默认情况下， 只有日志在级别信息和以上. -->
	<root level="INFO">
		<appender-ref ref="FILE" />
		<appender-ref ref="STDOUT" />
	</root>

	<!-- 在这些命名空间记录器，记录各级. -->
	<logger name="org.apache.http" level="OFF" />
	<logger name="org.hibernate" level="OFF" />
	<logger name="org.apache" level="OFF" />
	<logger name="org.springframework" level="OFF" />
	
	<logger name="com.lance.mybatis" level="ALL" />

	<logger name="java.sql.Connection" level="DEBUG" />
	<logger name="java.sql.Statement" level="DEBUG" />
	<logger name="java.sql.PreparedStatement" level="DEBUG" />
	
</configuration>  
